<div class="row"
     data-module="chat">

    <div class="col-12"
         id="log">

    </div>

    <div class="col-12">
        <form>
            <div class="form-group">
                <label for="usernameInput">Username</label>
                <input type="text"
                       required
                       class="form-control"
                       name="username"
                       id="usernameInput"
                       placeholder="username">
            </div>
            <div class="form-group">
                <label for="msgTextarea">Type a message</label>
                <textarea id="msgTextarea"
                          class="form-control"
                          rows="3">
                </textarea>
            </div>
            <button class="btn btn-primary"
                    type="submit">
                Send
            </button>
        </form>
    </div>

</div>


@section scripts {

    <script>
        class Wstester {
            constructor(url) {
                this.serverUrl = url;
                this.ws = new WebSocket(this.serverUrl);
                this.$main = $('[data-module="chat"]');
            }

            initializer() {
                this.webSocketInitializer();
            }

            webSocketInitializer() {
                let self = this;

                self.$btnSend = self.$main.find('[data-action="send"]');
                self.$textarea = self.$main.find("textarea");
                self.$logElement = self.$main.find("#log");
                self.$usernameInput = self.$main.find('[name="username"]');
                self.$form = self.$main.find('form');

                self.ws.onopen = function (event) {
                    self.appendInfo("WS open");

                    console.log("WS open");
                };

                self.ws.onclose = function (event) {
                    self.appendInfo("WS close");

                    console.log("WS close");
                };

                self.ws.onmessage = function (event) {
                    let msg = $.parseJSON(event.data);

                    self.appendMessage(msg);

                    console.log(msg);
                };

                self.ws.onerror = function (event) {
                    self.appendInfo(event.data);

                    console.error(event.data);
                };

                self.sendMessageBinding();
            }

            sendMessageBinding() {
                let self = this;

                self.$form.submit(function (event) {
                    event.preventDefault();

                    let msg = new Message(self.$textarea.val(),
                        self.$usernameInput.val());

                    self.$textarea.val('');

                    let msgStr = JSON.stringify(msg);

                    self.ws.send(msgStr);
                });
            }

            appendMessage(message) {
                let self = this;

                self.$logElement.append('<p>[' + message.date + '][' + message.username + ']' + message.text + '</p>');
            }

            appendInfo(info) {
                let self = this;

                self.$logElement.append('<p>' + info + '</p>');
            }
        }

        class Message {
            constructor(text, username) {
                this.date = new Date();
                this.text = JSON.encodeString(text);
                this.username = username;
            }
        }

        JSON.encodeString = function (str) {
            return String(str)
                .replace(/\\n/g, "\\n")
                .replace(/\\'/g, "\\'")
                .replace(/\\"/g, '\\"')
                .replace(/\\&/g, "\\&")
                .replace(/\\r/g, "\\r")
                .replace(/\\t/g, "\\t")
                .replace(/\\b/g, "\\b")
                .replace(/\\f/g, "\\f");
        };

        $(function () {
            let serverUrlWs = 'wss://localhost:5001/ws/chat';

            let wsT = new Wstester(serverUrlWs);
            wsT.initializer();
        });
    </script>

}